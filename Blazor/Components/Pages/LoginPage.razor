@page "/Login"
@inject HttpClient Http

<PageTitle>Login</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-sm">
        </div>
        <div class="col-sm">
            <div class="card" style="width: 20rem;">
                <div class="card-body">
                    <h3 class="text-center">Login Page</h3>
                    <form @bind-attributes="@((Model != null) ? new { disabled = true })">
                        <div class="form-group">
                            <label for="username">Username</label>
                            <input type="text" class="form-control" id="username" @bind="username" placeholder="Enter Username">
                        </div>

                        <div class="form-group">
                            <label for="password">Password</label>
                            <input type="password" class="form-control" id="password" @bind="password" placeholder="Password">
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-dark mt-3 justify-content-center">Sign In</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-sm">
        </div>
    </div>
</div>

@code {
    private string username { get; set; }
    private string password { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Initialize form fields
        username = "";
        password = "";
    }

    private async Task HandleFormSubmit()
    {
        if (!string.IsNullOrEmpty(username) && !string.IsNullOrEmpty(password))
        {
            var loginData = new LoginRequest
            {
                Username = username,
                Password = password
            };

            try
            {
                var response = await Http.PostAsJsonAsync("api/Users", loginData);
                if (response.IsSuccessStatusCode)
                {
                    // Handle successful login
                    Console.WriteLine("Login successful");
                }
                else
                {
                    // Handle failed login
                    Console.WriteLine($"Login failed: {await response.Content.ReadAsStringAsync()}");
                }
            }
            catch (Exception ex)
            {
                // Handle exceptions
                Console.WriteLine($"Error during login: {ex.Message}");
            }
        }
    }

    public class LoginRequest
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}
